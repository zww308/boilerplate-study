import "final_loop_library.scrypt";
import "final_loop_import.scrypt";

//Code of a contract that uses the library
contract Final {
    public function unlock_utxo(SigHashPreimage txPreImage, int a, int b) {
        require(Tx.checkPreimage(txPreImage));
        Object result = Loop.recursive(txPreImage, { a, b }); //This line does a loop
        require(result.a == 1);
    }

    //Do not touch below
    public function to_loop_1(SigHashPreimage txPreImage, int newAmount) {
        require(Loop.to_loop_1(txPreImage, newAmount));
    }
    public function to_loop_2(SigHashPreimage txPreImage, int newAmount) {
        require(Loop.to_loop_2(txPreImage, newAmount));
    }
    public function set_state(SigHashPreimage txPreImage, Object object, int newAmount) {
        require(Loop.setState(txPreImage, object, newAmount));
    }
}
