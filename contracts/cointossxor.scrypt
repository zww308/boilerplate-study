import "util.scrypt";

// fair coin toss using XOR
contract CoinToss {
    PubKey alice;
    PubKey bob;
    // commitments
    Sha256 aliceHash;
    Sha256 bobHash;

    public function toss(bytes aliceNonce, bytes bobNonce, Sig sig) {
        // nonce can be of any length, as long as it's resistant from brute-force attack
        // We use 256 bits / 32 bytes as an example here
        require(len(aliceNonce) == 32);
        require(hash256(aliceNonce) == this.aliceHash);
        require(len(bobNonce) == 32);
        require(hash256(bobNonce) == this.bobHash);

        // last bit of XOR
        bytes head = (aliceNonce ^ bobNonce) & b'0000000000000000000000000000000000000000000000000000000000000001';

        // head -> Alice wins; tail -> Bob wins
        PubKey winner = head ? this.alice : this.bob;

        // winner takes all
        require(checkSig(sig, winner));
    }
}
